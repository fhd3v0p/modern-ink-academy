import { Check } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";
import { useState } from "react";
import geometricCollection from "@/assets/geometric-collection-224.png";
import abstractShapes22 from "@/assets/abstract-shapes-22.png";
import abstractShapes221 from "@/assets/abstract-shapes-221.png";

const CoursesSection = () => {
  const [selectedCourse, setSelectedCourse] = useState<string | null>(null);
  const [showAsciiImage, setShowAsciiImage] = useState(false);
  const mainCourses = [
    {
      title: "–ù–æ–≤–∏—á–æ–∫",
      subtitle: "–ö—É—Ä—Å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
      price: "69 990 ‚ÇΩ",
      oldPrice: "100 000 ‚ÇΩ",
      duration: "1-2 –º–µ—Å—è—Ü–∞",
      badge: "üèÜ –ü–û–ü–£–õ–Ø–†–ù–´–ô",
      description: "–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ—Ç –æ—Å–Ω–æ–≤ –¥–æ –ø–µ—Ä–≤–æ–π —Ä–∞–±–æ—Ç—ã. –¢–µ–æ—Ä–∏—è, –ø—Ä–∞–∫—Ç–∏–∫–∞, –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.",
      features: [
        "–¢–µ–æ—Ä–∏—è —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏ –∏ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è",
        "–í—ã–±–æ—Ä –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        "–†–∞–±–æ—Ç–∞ —Å –∫–æ–∂–µ–π –∏ –ø–∏–≥–º–µ–Ω—Ç–∞–º–∏",
        "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
        "–ü—Ä–∞–∫—Ç–∏–∫–∞ –Ω–∞ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–æ–∂–µ",
        "–°–æ–∑–¥–∞–Ω–∏–µ —ç—Å–∫–∏–∑–æ–≤",
        "–†–∞–∑–≤–∏—Ç–∏–µ —Å–æ—Ü—Å–µ—Ç–µ–π"
      ],
      bonus: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7"
    },
    {
      title: "PRO+ –í–µ–¥–µ–Ω–∏–µ —Å–æ—Ü—Å–µ—Ç–µ–π",
      subtitle: "–û—Ç EMI –∏ BLOODIVAMP", 
      price: "24 990 ‚ÇΩ",
      oldPrice: "49 990 ‚ÇΩ",
      duration: "3 –Ω–µ–¥–µ–ª–∏",
      badge: "üÜï NEW",
      description: "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –∏ –∫–æ–Ω—Ç–µ–Ω—Ç-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è tattoo-–º–∞—Å—Ç–µ—Ä–æ–≤ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö.",
      features: [
        "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—É—Å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞",
        "Reels –∏ TikTok —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", 
        "–†–∞–±–æ—Ç–∞ —Å –±–ª–æ–≥–µ—Ä–∞–º–∏",
        "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤",
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏",
        "–ë—Ä–µ–Ω–¥–∏–Ω–≥ –∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
      ],
      bonus: "AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞"
    },
    {
      title: "Procreate –¥–ª—è —Ç–∞—Ç—É",
      subtitle: "–°–æ–∑–¥–∞–Ω–∏–µ —ç—Å–∫–∏–∑–æ–≤",
      price: "14 990 ‚ÇΩ",
      oldPrice: "34 990 ‚ÇΩ",
      duration: "2 –Ω–µ–¥–µ–ª–∏",
      badge: "üé® LVL UP",
      description: "–û—Å–≤–æ–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —ç—Å–∫–∏–∑–æ–≤ —Ç–∞—Ç—É–∏—Ä–æ–≤–æ–∫ –≤ Procreate. –û—Ç –±–∞–∑–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –¥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫.",
      features: [
        "–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Procreate",
        "–°–æ–∑–¥–∞–Ω–∏–µ –∫–∏—Å—Ç–µ–π –¥–ª—è —Ç–∞—Ç—É",
        "–†–∞–±–æ—Ç–∞ —Å–æ —Å–ª–æ—è–º–∏ –∏ –º–∞—Å–∫–∞–º–∏",
        "–¶–≤–µ—Ç–æ–∫–æ—Ä—Ä–µ–∫—Ü–∏—è –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã",
        "–≠–∫—Å–ø–æ—Ä—Ç –≤ –Ω—É–∂–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã",
        "–ê–≤—Ç–æ—Ä—Å–∫–∏–π –Ω–∞–±–æ—Ä –∫–∏—Å—Ç–µ–π"
      ],
      bonus: "–ù–∞–±–æ—Ä –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –∫–∏—Å—Ç–µ–π"
    }
  ];

  const nicheCourses = [
    {
      title: "–†–∞–∑–æ–≤–æ–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ",
      subtitle: "4 —á–∞—Å–∞ + —Ä–∞–∑–±–æ—Ä",
      price: "5 990 ‚ÇΩ",
      duration: "4 —á–∞—Å–∞",
      instructors: "EMI",
      team: "EMI [i]"
    },
    {
      title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      subtitle: "–õ–µ–∫—Ü–∏—è –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
      price: "–ü–æ –∑–∞–ø—Ä–æ—Å—É",
      duration: "4-5 —á–∞—Å–æ–≤",
      instructors: "VLADA",
      team: "VLADA [i]"
    },
    {
      title: "–ß–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞",
      subtitle: "–û—Ç EMI –∏ LUCIVIY",
      price: "–ü–æ –∑–∞–ø—Ä–æ—Å—É",
      duration: "–ü–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ",
      instructors: "EMI & LUCIVIY",
      team: "EMI & LUCIVIY [i]"
    }
  ];

  return (
    <section id="courses" className="py-20 bg-card/30">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-pixel text-pixel mb-4 flex items-center justify-center gap-2">
            <span>üéØ</span>
            <span>–ü–†–û–ì–†–ê–ú–ú–´ –û–ë–£–ß–ï–ù–ò–Ø</span>
          </h2>
          <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫—É—Ä—Å –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –≤ –º–∏—Ä–µ —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏
          </p>
        </div>

        {/* Main Courses */}
        <div className="mb-16">
          <h3 className="text-xl font-pixel text-primary mb-8 text-center flex items-center justify-center gap-2">
            <span>üöÄ</span>
            <span>–û–°–ù–û–í–ù–´–ï –ö–£–†–°–´</span>
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {mainCourses.map((course, index) => (
              <Card key={index} className="geometric-3d card-3d hover-3d pixel-grid" data-course={course.title}>
                <CardHeader className="space-y-1">
                  <div className="flex items-center justify-between mb-1">
                    <Badge className="btn-pixel-primary font-pixel text-xs">
                      {course.badge}
                    </Badge>
                  </div>
                  <CardTitle className="text-lg font-pixel">{course.title}</CardTitle>
                  <CardDescription className="font-pixel text-xs">{course.subtitle}</CardDescription>
                  <div className="space-y-1">
                    <div className="flex items-center space-x-2">
                      <span className="text-xl font-pixel text-primary">üí∞ {course.price}</span>
                      {course.oldPrice && (
                        <span className="text-sm font-pixel text-muted-foreground line-through">
                          {course.oldPrice}
                        </span>
                      )}
                    </div>
                    <div className="text-xs font-pixel text-muted-foreground">‚è±Ô∏è {course.duration}</div>
                  </div>
                  <div className="text-xs font-pixel text-secondary">üéÅ {course.bonus}</div>
                </CardHeader>
                <CardContent className={course.title === "–ù–æ–≤–∏—á–æ–∫" ? "space-y-2" : ""}>
                  <p className="text-sm text-muted-foreground mb-4">{course.description}</p>
                  <ul className="text-xs space-y-1 mb-4">
                    {course.features.map((feature, idx) => (
                      <li key={idx} className="flex items-center space-x-2">
                        <Check className="h-3 w-3 text-primary" />
                        <span>{feature}</span>
                      </li>
                    ))}
                  </ul>
                </CardContent>
                <CardFooter>
                  <div className="flex justify-center items-center space-x-2 w-full">
                    <Dialog>
                      <DialogTrigger asChild>
                        <Button 
                          size="sm" 
                          variant="outline" 
                          className={`px-1 btn-3d font-pixel text-xs flex items-center justify-center w-8 h-8 ${
                            index === 1 ? 'btn-pixel-secondary' : 'btn-pixel-primary'
                          }`}
                          onClick={() => setSelectedCourse(course.title)}
                        >
                          [i]
                        </Button>
                      </DialogTrigger>
                      <DialogContent className="max-w-[95vw] md:max-w-xl max-h-[90vh] overflow-y-auto bg-gradient-to-br from-background to-background/80 border-2 border-primary/40 shadow-xl z-[10000] mx-2 md:mx-auto">
                        <DialogHeader>
                          <DialogTitle className="text-center mb-6 font-pixel text-pixel">
                            ‚ÑπÔ∏è –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
                          </DialogTitle>
                        </DialogHeader>
                        
                        <div className="space-y-3">
                          <div className="bg-gradient-to-br from-background to-background/80 border border-primary/40 rounded-lg p-4">
                            <h3 className="text-lg font-pixel text-pixel mb-3">{course.title} - {course.subtitle}</h3>
                            <p className="text-sm text-muted-foreground leading-relaxed mb-3">
                              {course.description}
                            </p>
                            <div className="mb-3">
                              <h4 className="text-sm font-semibold text-primary mb-2">üéØ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</h4>
                              <ul className="text-xs space-y-1">
                                {course.features.map((feature, index) => (
                                  <li key={index} className="flex items-start space-x-2">
                                    <span className="text-primary font-bold">‚Ä¢</span>
                                    <span>{feature}</span>
                                  </li>
                                ))}
                              </ul>
                            </div>
                            <div className="text-center">
                              <Button 
                                className="btn-pixel-primary font-pixel text-xs px-3 py-1 shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300"
                                onClick={() => {
                                  const demoUrls = {
                                    "–ù–æ–≤–∏—á–æ–∫": "https://demo1.sbt.skin",
                                    "PRO+ –í–µ–¥–µ–Ω–∏–µ —Å–æ—Ü—Å–µ—Ç–µ–π": "https://demo2.sbt.skin", 
                                    "Procreate –¥–ª—è —Ç–∞—Ç—É": "https://demo3.sbt.skin"
                                  };
                                  const url = demoUrls[course.title as keyof typeof demoUrls];
                                  if (url) window.open(url, '_blank');
                                }}
                              >
                                üéØ –ü–†–û–ô–¢–ò –ü–ï–†–í–´–ô –£–†–û–ö –ë–ï–°–ü–õ–ê–¢–ù–û
                              </Button>
                              <p className="text-xs text-muted-foreground mt-2 font-pixel">
                                –ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
                              </p>
                            </div>
                          </div>
                        </div>
                      </DialogContent>
                    </Dialog>
                    <Button className={`btn-3d font-pixel text-sm ${index === 1 ? 'btn-pixel-secondary border-0' : 'btn-pixel-primary'} flex-1 px-4 py-2`}>
                      üöÄ –ó–ê–ü–ò–°–ê–¢–¨–°–Ø
                    </Button>
                  </div>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>

        {/* Niche Courses */}
        <div>
          <h3 className="text-xl font-pixel text-secondary mb-8 text-center flex items-center justify-center gap-2">
            <span>üéØ</span>
            <span>–ù–ò–®–ï–í–´–ï –ö–£–†–°–´</span>
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {nicheCourses.map((course, index) => (
              <Card key={index} className="geometric-3d card-3d hover-3d pixel-grid" data-course={course.title}>
                <CardHeader>
                  <CardTitle className="text-base font-pixel">{course.title}</CardTitle>
                  <CardDescription className="font-pixel text-xs">{course.instructors}</CardDescription>
                  <div className="flex items-center justify-between">
                    <span className="text-lg font-pixel text-primary">üí∞ {course.price}</span>
                    <span className="text-xs font-pixel text-muted-foreground">‚è±Ô∏è {course.duration}</span>
                  </div>
                  <div className="text-xs font-pixel text-secondary">üë• {course.team}</div>
                </CardHeader>
                <CardFooter>
                  <div className="flex justify-center items-center space-x-2 w-full">
                    <Dialog>
                      <DialogTrigger asChild>
                        <Button 
                          size="sm" 
                          variant="outline" 
                          className="px-1 btn-3d btn-pixel-secondary font-pixel text-xs flex items-center justify-center w-8 h-8"
                          onClick={() => setSelectedCourse(course.title)}
                        >
                          [i]
                        </Button>
                      </DialogTrigger>
                      <DialogContent className="max-w-[95vw] md:max-w-xl max-h-[90vh] overflow-y-auto bg-gradient-to-br from-background to-background/80 border-2 border-primary/40 shadow-xl z-[10000] mx-2 md:mx-auto">
                        <DialogHeader>
                          <DialogTitle className="text-center mb-6 font-pixel text-pixel">
                            ‚ÑπÔ∏è –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø
                          </DialogTitle>
                        </DialogHeader>
                        
                        <div className="space-y-3">
                          <div className="bg-gradient-to-br from-background to-background/80 border border-primary/40 rounded-lg p-4">
                            <h3 className="text-lg font-pixel text-pixel mb-3">{course.title}</h3>
                            <p className="text-sm text-muted-foreground leading-relaxed mb-3">
                              –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫—É—Ä—Å–µ "{course.title}" –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
                            </p>
                            <div className="mb-3">
                              <h4 className="text-sm font-semibold text-primary mb-2">üéØ –ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</h4>
                              <ul className="text-xs space-y-1">
                                <li className="flex items-start space-x-2">
                                  <span className="text-primary font-bold">‚Ä¢</span>
                                  <span>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏</span>
                                </li>
                                <li className="flex items-start space-x-2">
                                  <span className="text-primary font-bold">‚Ä¢</span>
                                  <span>–û–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–æ–≤</span>
                                </li>
                                <li className="flex items-start space-x-2">
                                  <span className="text-primary font-bold">‚Ä¢</span>
                                  <span>–î–æ—Å—Ç—É–ø –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º</span>
                                </li>
                                <li className="flex items-start space-x-2">
                                  <span className="text-primary font-bold">‚Ä¢</span>
                                  <span>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏</span>
                                </li>
                              </ul>
                            </div>
                            <div className="text-center">
                              <Button 
                                className="btn-pixel-primary font-pixel text-xs px-3 py-1 shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300"
                                onClick={() => {
                                  const demoUrls = {
                                    "–†–∞–∑–æ–≤–æ–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ": "https://demo1.sbt.skin",
                                    "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è": "https://demo2.sbt.skin", 
                                    "–ß–µ—Ä–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞": "https://demo3.sbt.skin"
                                  };
                                  const url = demoUrls[course.title as keyof typeof demoUrls];
                                  if (url) window.open(url, '_blank');
                                }}
                              >
                                üéØ –ü–†–û–ô–¢–ò –ü–ï–†–í–´–ô –£–†–û–ö –ë–ï–°–ü–õ–ê–¢–ù–û
                              </Button>
                              <p className="text-xs text-muted-foreground mt-2 font-pixel">
                                –ù–∞—á–Ω–∏—Ç–µ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!
                              </p>
                            </div>
                          </div>
                        </div>
                      </DialogContent>
                    </Dialog>
                    <Button variant="outline" className="btn-3d btn-pixel-secondary font-pixel text-sm flex-1 px-4 py-2">
                      üöÄ –ó–ê–ü–ò–°–ê–¢–¨–°–Ø
                    </Button>
                  </div>
                </CardFooter>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </section>
  );
};

export default CoursesSection;